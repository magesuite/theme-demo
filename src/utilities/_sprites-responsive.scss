/**
 * Calculates and inserts sprite position based on % not pixels.
 * @param  {Map} $sprite Spritesmith generated sprite map.
 */
@mixin sprite-position-percent($sprite) {
    $sprite-position-x: nth( $sprite, 1 ) / ( nth( $sprite, 7 ) - nth( $sprite, 5 ) ) * 100%;
    $sprite-position-y: nth( $sprite, 2 ) / ( nth( $sprite, 8 ) - nth( $sprite, 6 ) ) * 100%;
    background-position: $sprite-position-x $sprite-position-y;
}

/**
 * Calculates and inserts sprite background size based on % not pixels.
 * @param  {Map} $sprite Spritesmith generated sprite map.
 */
@mixin sprite-background-size-percent($sprite) {
    $sprite-size-x: nth( $sprite, 7 ) / nth( $sprite, 5 ) * 100%;
    $sprite-size-y: nth( $sprite, 8 ) / nth( $sprite, 6 ) * 100%;
    background-size: $sprite-size-x $sprite-size-y;
}

/**
 * Just like normal sprite mixin but based on pixels so sprites
 * can be width - responsive.
 * @param  {Map} $sprite Spritesmith generated sprite map.
 */
@mixin sprite-responsive($sprite) {
    @include sprite-image($sprite);
    @include sprite-position-percent($sprite);
    @include sprite-background-size-percent($sprite);
    @include sprite-width($sprite);

    &:after {
        display: block;
        content: '';
        width: 100%;
        padding-bottom: nth( $sprite, 6 ) / nth( $sprite, 5 ) * 100%;
    }
}

/**
 * Just like normal sprite-retina mixin but based on pixels so sprites
 * can be width - responsive.
 * @param  {Map} $sprite Spritesmith generated sprite map.
 */
@mixin retina-sprite-responsive($retina-group) {
    $normal-sprite: nth( $retina-group, 2 );
    $retina-sprite: nth( $retina-group, 3 );
    @include sprite-responsive($normal-sprite);

    @media ( min-resolution: 192dpi ) {
        @include sprite-image($retina-sprite);
    }
}
