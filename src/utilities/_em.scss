/**
 * Mixin converting pixel values to EM with given base.
 * Usage:
 * h1 {
 *   @include em(16px, marign, 0 auto 20px);
 * }
 * will convert to:
 * h1 {
 *   marign: 0 auto 1.42857em;
 * }
 */
@mixin em($base, $property, $values) {
    // Create a couple of empty lists as output buffers.
    $em-values: ();

    // Loop through the $values list
    @each $value in $values {
        // For each property value, if it's in rem or px, derive both rem and
        // px values for it and add those to the end of the appropriate buffer.
        // Ensure all pixel values are rounded to the nearest pixel.
        @if $value == 0 or $value == 0px { // stylelint-disable-line
            // 0 -- use it without a unit
            $em-values: join( $em-values, 0 );
        }
        @else if type-of( $value ) == number and ( unit( $value ) == px ) {
            // px value given - calculate em value from base
            $new-em-value: $value / $base;
            $em-values: join( $em-values, #{$new-em-value}em );
        }
        @else {
            // unitless value - use those directly as em
            $em-values: join( $em-values, $value );
        }
    }

    // output the converted rules
    #{$property}: $em-values;
}
